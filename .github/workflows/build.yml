name: Build and Release
"on":
  push:
    tags:
    - v*
jobs:
  build:
    name: Build for Windows and Linux
    strategy:
      matrix:
        os:
        - linux
        - windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
    - name: Install Go dependencies
      run: go mod tidy
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build for ${{ matrix.os }}
      run: |
        if [[ "${{ matrix.os }}" == "linux" ]]; then
          GOOS=linux GOARCH=amd64 go build -o sv
        elif [[ "${{ matrix.os }}" == "windows" ]]; then
          GOOS=windows GOARCH=amd64 go build -o sv.exe
        fi
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: sv-${{ matrix.os }}
        path: sv*
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download a build artifact
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: List downloaded artifacts
      run: ls -l artifacts
    - name: Create GitHub Release with Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/sv
          artifacts/sv.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}